#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&lt { flavor = "tap-preferred"; };

&mt { flavor = "tap-preferred"; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <14 15>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <29 30>;
        };

        bac {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 11>;
        };

        dnter {
            bindings = <&kp ENTER>;
            key-positions = <25 26>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <39 40>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <3 4>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <16 17>;
        };

        pu {
            bindings = <&kp PG_UP>;
            key-positions = <8 9>;
        };

        pd {
            bindings = <&kp PG_DN>;
            key-positions = <23 24>;
        };
    };

    macros {
        Key: Key {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(C) &kp H &kp L &kp DOT &kp N8 &kp N8 &kp N0 &kp N6 &kp N0 &kp N2 &kp AMPS &kp STAR &kp LPAR &kp ENTER>;
            label = "KEY";
        };

        Keychange: Keychange {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(C) &kp H &kp L &kp DOT &kp N8 &kp N8 &kp N0 &kp N6 &kp N0 &kp N2 &kp CARET &kp AMPS &kp STAR>;
            label = "KEYCHANGE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&none  &kp Q    &kp W  &kp E           &kp R                 &kp T                                   &kp UP                   &kp Y      &kp U             &kp I         &kp O    &kp P                  &none
&none  &kp A    &kp S  &kp D           &kp F                 &lt 5 G                       &kp LEFT  &kp LEFT_ALT  &kp RIGHT  &lt 5 H    &kp J             &kp K         &kp L    &kp ENTER              &none
&none  &lt 3 Z  &kp X  &kp C           &kp V                 &kp B           &kp C_MUTE              &kp DOWN                 &kp N      &kp M             &kp COMMA     &kp DOT  &mt RIGHT_SHIFT SLASH  &none
                       &lt 6 CAPSLOCK  &mt LCTRL LEFT_SHIFT  &lt 1 LEFT_WIN                                                   &kp SPACE  &ltq 2 BACKSPACE  &lt 4 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&none  &kp N1     &kp N2      &kp N3     &kp N4        &kp N5                                      &mmv MOVE_UP                     &kp N6     &kp N7    &kp N8      &kp N9    &kp N0    &none
&none  &kp MINUS  &kp EQUAL   &kp F2     &kp F5        &kp TAB                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp BSLH   &kp LBKT  &kp RBKT    &kp SEMI  &kp APOS  &none
&none  &kp GRAVE  &kp C_MUTE  &Key       &kp C_VOL_DN  &kp C_VOL_UP  &Keychange                    &mmv MOVE_DOWN                   &none      &none     &none       &none     &none     &none
                              &kp LSHFT  &kp LALT      &trans                                                                       &kp SPACE  &kp BSPC  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&none  &kp EXCL       &kp AT         &kp HASH  &kp DLLR       &kp PRCNT                            &mmv MOVE_UP                     &kp CARET     &kp AMPS      &kp ASTRK      &kp LPAR      &kp RPAR      &none
&none  &kp LS(MINUS)  &kp LS(EQUAL)  &trans    &trans         &trans               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LS(BSLH)  &kp LS(LBKT)  &kp LS(RBKT)   &kp LS(SEMI)  &kp LS(APOS)  &none
&none  &kp LS(GRAVE)  &trans         &trans    &trans         &trans     &trans                    &mmv MOVE_DOWN                   &trans        &trans        &kp LS(COMMA)  &kp LS(DOT)   &kp LS(FSLH)  &none
                                     &trans    &kp BACKSPACE  &kp SPACE                                                             &kp SPACE     &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &kp LEFT    &kp RIGHT  &kp N7  &kp N8   &kp N9                                 &mmv MOVE_UP                     &kp LS(EQUAL)  &kp MINUS   &kp LS(N8)   &kp FSLH  &kp BSPC   &trans
&trans  &kp LALT    &kp BSPC   &kp N4  &kp N5   &kp N6                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp EQUAL      &kp LS(N9)  &kp LS(N0)   &trans    &kp ENTER  &trans
&trans  &sys_reset  &kp ENTER  &kp N1  &kp N2   &kp N3   &kp C_MUTE                    &mmv MOVE_DOWN                   &trans         &trans      &bootloader  &kp LALT  &kp TAB    &trans
                               &kp N0  &kp DOT  &kp TAB                                                                 &trans         &trans      &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                                           &mmv MOVE_UP                     &mkp RCLK       &none            &msc SCRL_UP    &none            &none           &trans
&trans  &bt BT_CLR       &bt BT_CLR_ALL   &rgb_ug RGB_OFF  &rgb_ug RGB_ON   &ext_power EP_OFF                      &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &mkp MCLK       &msc SCRL_LEFT   &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp UP_ARROW    &trans
&trans  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans             &ext_power EP_ON                    &mmv MOVE_DOWN                   &mmv MOVE_UP    &mmv MOVE_RIGHT  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp DOWN_ARROW  &trans
                                          &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans                                                                                  &mmv MOVE_LEFT  &mmv MOVE_DOWN   &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans    &kp UP_ARROW    &trans           &kp TAB                     &trans          &trans     &trans          &kp UP_ARROW    &trans           &trans   &trans
&trans  &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans              &trans  &kp F7  &trans  &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans   &trans
&trans  &kp F1  &kp F2    &kp F3          &kp F4           &kp F5    &kp F6            &trans          &kp F8     &kp F9          &kp F10         &kp F11          &kp F12  &trans
                          &trans          &kp LALT         &kp LGUI                                    &kp SPACE  &kp BSPC        &kp DELETE
            >;
        };

        layer_6 {
            bindings = <
&trans  &kp LC(J)            &kp LA(LC(W))  &kp LC(LSHFT)  &kp LC(Y)  &kp LG(TAB)                       &trans          &kp INS          &trans    &trans    &trans  &kp BSPC   &trans
&trans  &mt LA(LC(A)) LC(A)  &kp LC(S)      &kp LG(D)      &kp LC(F)  &kp LG(L)                 &trans  &trans  &trans  &kp PRINTSCREEN  &trans    &trans    &trans  &kp ENTER  &trans
&trans  &kp LC(Z)            &kp LC(X)      &kp LC(C)      &kp LC(V)  &kp LC(B)    &kp LC(P)            &trans          &trans           &trans    &trans    &trans  &trans     &trans
                                            &trans         &kp LC(J)  &kp LC(P)                                         &kp SPACE        &kp BSPC  &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp LC(P) LC(P)>;
        };
    };
};
